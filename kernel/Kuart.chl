// simple ns16550a uart driver
pkg Kuart;

use U8;

let OFFSET_DATA: UInt = 0;
let OFFSET_FIFO_CONTROL: UInt = 2;
let OFFSET_LINE_CONTROL: UInt = 3;
let OFFSET_LINE_STATUS: UInt = 5;

pub type Uart: {
    pub base_address: &mut U8,
};

pub fn init(uart: &mut Uart) {
    U8::write_volatile(uart.base_address + OFFSET_LINE_CONTROL, 3); // 8-bit
    U8::write_volatile(uart.base_address + OFFSET_FIFO_CONTROL, 1); // enable FIFO
}

pub fn write(uart: &mut Uart, bytes: []U8) {
    let mut i = 0u;
    for i < lengthof bytes {
        U8::write_volatile(uart.base_address, bytes[i]);
        i += 1;
    }
}

pub fn read(uart: &mut Uart, buf: []mut U8): UInt {
    let mut i = 0u;
    for i < lengthof buf {
        for (U8::read_volatile(uart.base_address + OFFSET_LINE_STATUS) & 0x01) == 0 { }
        buf[i] = U8::read_volatile(uart.base_address);
        i += 1;
    }
    return i;
}
