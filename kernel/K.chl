// kernel entry point
pkg K;

use Kfdt;

pub fn start(fdt_start: &U8) {
    let mut tree: Kfdt::Tree;

    if Kfdt::init_from_addr(&mut tree, fdt_start) != 0 {
        halt();
    }

    let mut uart: Kfdt::Uart;
    if Kfdt::find_uart(&mut tree, &mut uart) != 0 {
        halt();
    }

    // now we have the fdt, we're going to hurry and locate the
    // the boot console device, usually a 16550-style uart

    // once the kernel is up and running, we'll enumerate the *drivers*
    // asking them to confirm if they are compatible with the hardware
    // in the fdt and activate them. Linux does something like this.
}

pub fn halt() {
    for {}
}

